<?xml version="1.0"?>
<doc>
    <assembly>
        <name>atelier2</name>
    </assembly>
    <members>
        <member name="T:atelier2.bddmanager.BddManager">
            <summary>
            Singleton : connexion à la base de données et exécution des requêtes
            </summary>
        </member>
        <member name="F:atelier2.bddmanager.BddManager.instance">
            <summary>
            instance unique de la classe
            </summary>
        </member>
        <member name="F:atelier2.bddmanager.BddManager.connection">
            <summary>
            objet de connexion à la BDD à partir d'une chaîne de connexion
            </summary>
        </member>
        <member name="M:atelier2.bddmanager.BddManager.#ctor(System.String)">
            <summary>
            Constructeur pour créer la connexion à la BDD et l'ouvrir
            </summary>
            <param name="stringConnect">chaine de connexion</param>
        </member>
        <member name="M:atelier2.bddmanager.BddManager.GetInstance(System.String)">
            <summary>
            Création d'une seule instance de la classe
            </summary>
            <param name="stringConnect">chaine de connexion</param>
            <returns>instance unique de la classe</returns>
        </member>
        <member name="M:atelier2.bddmanager.BddManager.ReqUpdate(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Exécution d'une requête autre que "select"
            </summary>
            <param name="stringQuery">requête autre que select</param>
            <param name="parameters">dictionnire contenant les parametres</param>
        </member>
        <member name="M:atelier2.bddmanager.BddManager.ReqSelect(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Execution d'une requête de type "select"
            </summary>
            <param name="stringQuery">requête select</param>
            <param name="parameters">dictoinnaire contenant les parametres</param>
            <returns>liste de tableaux d'objets contenant les valeurs des colonnes</returns>
        </member>
        <member name="T:atelier2.controller.FmrAuthController">
            <summary>
            Contrôleur de FmrAuth
            </summary>
        </member>
        <member name="F:atelier2.controller.FmrAuthController.connectionAccess">
            <summary>
            objet d'accès a la verification login mot de passe
            </summary>
        </member>
        <member name="F:atelier2.controller.FmrAuthController.gestion">
            <summary>
            vu du systeme de gestion du personnel et de leurs absences 
            </summary>
        </member>
        <member name="M:atelier2.controller.FmrAuthController.#ctor">
            <summary>
            Récupère les acces aux données
            </summary>
        </member>
        <member name="M:atelier2.controller.FmrAuthController.GetLaConnection(System.String,System.String)">
            <summary>
            Valide ou non l'authentification login pwd du responsable
            Si valide lance la fenêtre de gestion et renvoi vrai
            Sinon valide renvoi false
            </summary>
            <param name="login"></param>
            <param name="psw"></param>
            <returns></returns>
        </member>
        <member name="T:atelier2.controller.FmrGestionController">
            <summary>
            Contôleur de FmrGestion
            </summary>
        </member>
        <member name="F:atelier2.controller.FmrGestionController.personnelAccess">
            <summary>
            objet d'accès aux opérations possibles sur Personnel
            </summary>
        </member>
        <member name="F:atelier2.controller.FmrGestionController.absenceAccess">
            <summary>
            objet d'accès aux opérations possibles sur Absence
            </summary>
        </member>
        <member name="F:atelier2.controller.FmrGestionController.initAccess">
            <summary>
             objet d'accès aux opérations d'initialisation des comboBox
            </summary>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.#ctor">
            <summary>
            Récupère les acces aux données
            </summary>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.GetLesPersonnels">
            <summary>
            Récupère et retourne les infos du personnel
            </summary>
            <returns>liste du personnel</returns>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.GetLesAbsences(atelier2.model.Personnel)">
            <summary>
             Récupère et retourne les absences d'un personnel
            </summary>
            <param name="personnel">object personnel concerné</param>
            <returns>liste d'absence d'un personnel</returns>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.GetLesServices">
            <summary>
            Récupère et retourne les différents services
            </summary>
            <returns>Liste des services</returns>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.GetLesMotifs">
            <summary>
            Récupère et retourne les différents motifs
            </summary>
            <returns>Liste des motifs</returns>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.AddPersonnel(atelier2.model.Personnel)">
            <summary>
            Ajoute un personnel a la base de données
            </summary>
            <param name="personnel">object personnel a ajouter</param>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.AddAbsence(atelier2.model.Absence)">
            <summary>
            Ajoute une absence a la base de donnes
            </summary>
            <param name="absence">object absence ajouté la base de donnes</param>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.UpdatePersonnel(atelier2.model.Personnel)">
            <summary>
            Modifie un personnel dans la base de données
            </summary>
            <param name="personnel">object personnel a modifier</param>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.UpdateAbsence(atelier2.model.Absence)">
            <summary>
            Modifie une absence dans la base de données
            </summary>
            <param name="absence">object absence a modifier</param>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.DelPersonnel(atelier2.model.Personnel)">
            <summary>
            Suprime un personnel dans la base de données
            </summary>
            <param name="personnel">object personnel a suprimer</param>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.DelAbsence(atelier2.model.Absence)">
            <summary>
            Suprime une absence dans la base de données
            </summary>
            <param name="absence">object absence a suprimer</param>
        </member>
        <member name="M:atelier2.controller.FmrGestionController.DelLesAbsences(atelier2.model.Personnel)">
            <summary>
            Suprime les absences d'un personne dans la base de données
            </summary>
            <param name="personnel">le personne dont les absences seronts suprimé</param>
        </member>
        <member name="T:atelier2.dal.AbsenceAccess">
            <summary>
            Classe permettant de gérer les demandes concernant les absences
            </summary>
        </member>
        <member name="F:atelier2.dal.AbsenceAccess.access">
            <summary>
            Instance unique de l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.AbsenceAccess.#ctor">
            <summary>
            Constructeur pour créer l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.AbsenceAccess.GetLesAbsences(atelier2.model.Personnel)">
            <summary>
            Récupère et retourne les absences d'un personnel
            </summary>
            <param name="personnel">le personnel concerné par les absences</param>
            <returns>liste d'absences</returns>
        </member>
        <member name="M:atelier2.dal.AbsenceAccess.AddAbsence(atelier2.model.Absence)">
            <summary>
            Demande d'ajout d'une absence
            </summary>
            <param name="absence">objet absence à ajouter</param>
        </member>
        <member name="M:atelier2.dal.AbsenceAccess.UpdateAbsence(atelier2.model.Absence)">
            <summary>
            Demande de modification d'uen absence
            </summary>
            <param name="absence">objet absence à modifier</param>
        </member>
        <member name="M:atelier2.dal.AbsenceAccess.DelAbsence(atelier2.model.Absence)">
            <summary>
            Demande de suppression d'un absence
            </summary>
            <param name="absence">objet absence à supprimer</param>
        </member>
        <member name="M:atelier2.dal.AbsenceAccess.DelLesAbsences(atelier2.model.Personnel)">
            <summary>
            Demande de suppression des absences d'une personnel
            </summary>
            <param name="personnel">le personnel dont on effasse les absences</param>
        </member>
        <member name="T:atelier2.dal.Access">
            <summary>
            Singleton : classe d'accès à BddManager
            </summary>
        </member>
        <member name="F:atelier2.dal.Access.connectionString">
            <summary>
            chaine de connexion à la bdd
            </summary>
        </member>
        <member name="F:atelier2.dal.Access.instance">
            <summary>
            instance unique de la classe
            </summary>
        </member>
        <member name="P:atelier2.dal.Access.Manager">
            <summary>
            Getter sur l'objet d'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.Access.#ctor">
            <summary>
            Création unique de l'objet de type BddManager
            Arrête le programme si l'accès à la BDD a échoué
            </summary>
        </member>
        <member name="M:atelier2.dal.Access.GetInstance">
            <summary>
            Création d'une seule instance de la classe
            </summary>
            <returns></returns>
        </member>
        <member name="T:atelier2.dal.ConnectionAccess">
            <summary>
            Classe permettant de  gérer les demandes de verification de login et mot de passe
            pour acceder au logiciel de gestion
            </summary>
        </member>
        <member name="F:atelier2.dal.ConnectionAccess.access">
            <summary>
            Instance unique de l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.ConnectionAccess.#ctor">
            <summary>
            Constructeur pour créer l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.ConnectionAccess.GetLaConnection(System.String,System.String)">
            <summary>
            retourne vrai si la combinaison mdp pwd existe dans la base de données
            </summary>
            <param name="login"></param>
            <param name="pwd"></param>
            <returns>vrai ou faux</returns>
        </member>
        <member name="T:atelier2.dal.InitAccess">
            <summary>
            Classe permettant d'initialiser les combobox de l'affichage
            </summary>
        </member>
        <member name="F:atelier2.dal.InitAccess.access">
            <summary>
            Instance unique de l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.InitAccess.#ctor">
            <summary>
            Constructeur pour créer l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.InitAccess.GetLesServices">
            <summary>
            Récupère et retourne les profils
            </summary>
            <returns>Liste des profils</returns>
        </member>
        <member name="M:atelier2.dal.InitAccess.GetLesMotifs">
            <summary>
            Récupère et retourne les motifs
            </summary>
            <returns>Liste des motifs</returns>
        </member>
        <member name="T:atelier2.dal.PersonnelAccess">
            <summary>
            Classe permettant de gérer les demandes concernant les absences
            </summary>
        </member>
        <member name="F:atelier2.dal.PersonnelAccess.access">
            <summary>
            Instance unique de l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.PersonnelAccess.#ctor">
            <summary>
            Constructeur pour créer l'accès aux données
            </summary>
        </member>
        <member name="M:atelier2.dal.PersonnelAccess.GetLesPersonnels">
            <summary>
            Récupère et retourne le personnel
            </summary>
            <returns>liste du personnel</returns>
        </member>
        <member name="M:atelier2.dal.PersonnelAccess.AddPersonnel(atelier2.model.Personnel)">
            <summary>
            Demande d'ajout un personnel
            </summary>
            <param name="personnel">objet personnel à ajouter</param>
        </member>
        <member name="M:atelier2.dal.PersonnelAccess.UpdatePersonnel(atelier2.model.Personnel)">
            <summary>
            Demande de modification d'un personnel
            </summary>
            <param name="personnel">objet personnel à modifier</param>
        </member>
        <member name="M:atelier2.dal.PersonnelAccess.DelPersonnel(atelier2.model.Personnel)">
            <summary>
            Demande de suppression d'un personnel
            </summary>
            <param name="personnel">objet personnel à supprimer</param>
        </member>
        <member name="T:atelier2.model.Absence">
            <summary>
            Classe métier liée à la table Absence
            </summary>
        </member>
        <member name="M:atelier2.model.Absence.#ctor(System.Int32,System.DateTime,System.DateTime,atelier2.model.Motif)">
            <summary>
            Valorise les propriétés
            </summary>
            <param name="idpersonnel"></param>
            <param name="datedebut"></param>
            <param name="datefin"></param>
            <param name="motif"></param>
        </member>
        <member name="T:atelier2.model.Motif">
            <summary>
            Classe métier liée à la table Motif
            </summary>
        </member>
        <member name="M:atelier2.model.Motif.#ctor(System.Int32,System.String)">
            <summary>
            Valorise les propriétés
            </summary>
            <param name="idmotif"></param>
            <param name="libelle"></param>
        </member>
        <member name="M:atelier2.model.Motif.ToString">
            <summary>
            Définit l'information à afficher (juste le nom)
            </summary>
            <returns>Libelle du motif</returns>
        </member>
        <member name="T:atelier2.model.Personnel">
            <summary>
             Classe métier liée à la table Personnel
            </summary>
        </member>
        <member name="M:atelier2.model.Personnel.#ctor(System.Int32,System.String,System.String,System.String,System.String,atelier2.model.Service)">
            <summary>
            Valorise les propriétés
            </summary>
            <param name="idpersonnel"></param>
            <param name="nom"></param>
            <param name="prenom"></param>
            <param name="tel"></param>
            <param name="mail"></param>
            <param name="service"></param>
        </member>
        <member name="T:atelier2.model.Service">
            <summary>
            Classe métier liée à la table Service
            </summary>
        </member>
        <member name="M:atelier2.model.Service.#ctor(System.Int32,System.String)">
            <summary>
            Valorise les propriétés
            </summary>
            <param name="idservice"></param>
            <param name="nom"></param>
        </member>
        <member name="M:atelier2.model.Service.ToString">
            <summary>
            Définit l'information à afficher (juste le nom)
            </summary>
            <returns>Nom du service</returns>
        </member>
        <member name="T:atelier2.FmrAuth">
            <summary>
            Fenêtre de connection
            </summary>
        </member>
        <member name="M:atelier2.FmrAuth.#ctor">
            <summary>
            construction des composants graphiques 
            </summary>
        </member>
        <member name="M:atelier2.FmrAuth.Init">
            <summary>
            Initialisations :
            Création du controleur
            </summary>
        </member>
        <member name="M:atelier2.FmrAuth.BtnConnec_Click(System.Object,System.EventArgs)">
            <summary>
            Demande de connection
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:atelier2.FmrAuth.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:atelier2.FmrAuth.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:atelier2.FmrAuth.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="M:atelier2.Program.Main">
            <summary>
            Point d'entrée principal de l'application.
            </summary>
        </member>
        <member name="T:atelier2.view.FmrGestion">
            <summary>
            Fenêtre d'affichage du personnel et des absences
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.enCoursDeModifPersonnel">
            <summary>
            Booléen pour savoir si une modification personnel est demandée
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.enCoursDeModifAbsence">
            <summary>
            Booléen pour savoir si une modification d'absence est demandée
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.personnelSelect">
            <summary>
            Personnel dont les absences sont affiché
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.bdgPersonnel">
            <summary>
            Objet pour gérer la liste du personnel
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.bdgAbsence">
            <summary>
            Objet pour gérer la liste des absences du personnel selectionné
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.bdgServices">
            <summary>
             Objet pour gérer la liste des services
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.bdgMotifs">
            <summary>
             Objet pour gérer la liste des motifs
            </summary>
        </member>
        <member name="F:atelier2.view.FmrGestion.controller">
            <summary>
            Controleur de la fenêtre
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.#ctor">
            <summary>
            construction des composants graphiques et appel des autres initialisations
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.Init">
            <summary>
            Initialisation:
            Creation du controleur et remplissage des listes
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.RemplirListePersonnel">
            <summary>
            Affiche le personnel
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.RemplirListeAbsence(atelier2.model.Personnel)">
            <summary>
            Affiche les absences du personnel selectionné
            </summary>
            <param name="personnel"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.RemplirListeService">
            <summary>
            Affiche les services
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.RemplirListeMotif">
            <summary>
            Affiche les motifs
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.EnCourseDeModifPersonnel(System.Boolean)">
            <summary>
            Demande de modification d'un personnel
            </summary>
            <param name="modif"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.EnCourseDeModifAbsence(System.Boolean)">
            <summary>
            Demande de modification d'une absence
            </summary>
            <param name="modif"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnProModifier_Click_1(System.Object,System.EventArgs)">
            <summary>
            Demande de modification d'un personnel 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnAbsModifier_Click(System.Object,System.EventArgs)">
            <summary>
            Demande de modification d'une absence
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnProSuprimer_Click(System.Object,System.EventArgs)">
            <summary>
            Demande de supression d'un personnel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnAbsSuprimer_Click(System.Object,System.EventArgs)">
            <summary>
            Demande de supression d'une absence
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnProEnregistrer_Click(System.Object,System.EventArgs)">
            <summary>
            Demande d'enregistrement de l'ajout ou de la modification d'un personnel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnAbsEnregistrer_Click(System.Object,System.EventArgs)">
            <summary>
            Demande d'enregistrement de l'ajout ou de la modification d'une absence
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnProAnnuler_Click(System.Object,System.EventArgs)">
            <summary>
            Annule la demande d'ajout ou de modification d'un personnel
            Vide les zones de saisie du personnel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.BtnAbsAnnuler_Click(System.Object,System.EventArgs)">
            <summary>
            Annule la demande d'ajout ou de modification d'une absence
            Réinitialise les zones de saisie  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.Bntafficher_Click(System.Object,System.EventArgs)">
            <summary>
            Deamande l'affichage des absences du personnel selectionné
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:atelier2.view.FmrGestion.VerifAbs(atelier2.model.Absence)">
            <summary>
            Verifie qu'une absence n'a pas deja été assigné le même jour
            </summary>
            <param name="absence"></param>
            <returns></returns>
        </member>
        <member name="M:atelier2.view.FmrGestion.MainForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Arrête le programme
            quand on ferme la fenêtre 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:atelier2.view.FmrGestion.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:atelier2.view.FmrGestion.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:atelier2.view.FmrGestion.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:atelier2.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:atelier2.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:atelier2.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
    </members>
</doc>
